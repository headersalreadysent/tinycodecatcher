name: Build and Release CodeCatcher

on:
  push:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up jdk
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Setup some android tools
        run: sudo apt-get update && sudo apt-get install -y aapt apksigner

      - name: Cache gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: codecatcher-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            codecatcher-${{ runner.os }}-gradle-

      - name: Build apk
        run: ./gradlew assembleRelease

      - name: Decode keystore
        env:
          JKS_BASE64: ${{ secrets.JKS_BASE64 }}
        run: |
          echo "$JKS_BASE64" | base64 --decode > certificate.jks

      - name: Sign apk with key
        env:
          JKS_PASSWORD: ${{ secrets.JKS_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          UNSIGNED_APK_PATH="app/build/outputs/apk/release/app-release-unsigned.apk"
          SIGNED_APK_PATH="app/build/outputs/apk/release/app-release-signed.apk"
          
          apksigner sign \
            --ks certificate.jks \
            --ks-key-alias "$KEY_ALIAS" \
            --ks-pass "pass:$JKS_PASSWORD" \
            --key-pass "pass:$KEY_PASSWORD" \
            --out $SIGNED_APK_PATH \
            $UNSIGNED_APK_PATH

      - name: Verify apk
        run: |
          apksigner verify --print-certs "app/build/outputs/apk/release/app-release-signed.apk"     
          cp app/build/outputs/apk/release/app-release-signed.apk app/build/outputs/apk/release/CodeCatcher-dev.apk

      - name: Get the current date
        id: date
        run: echo "tag_date=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Create new tag
        id: create_tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag "development-$GITHUB_ENV-tag_date"
          git push origin --tags

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "development-${{ env.tag_date }}"
          files: "app/build/outputs/apk/release/CodeCatcher-dev.apk"
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}